{"seed": "public int addNumbers(int a, int b) {\n    return a + b;\n}", "comment": "// Adds two integers and returns their sum.", "sha1": "abc123", "id": "1"}
{"seed": "public String reverseString(String input) {\n    StringBuilder sb = new StringBuilder(input);\n    return sb.reverse().toString();\n}", "comment": "// Reverses the given string and returns the result.", "sha1": "def456", "id": "2"}
{"seed": "public boolean isEven(int number) {\n    return number % 2 == 0;\n}", "comment": "// Checks if the given number is even and returns true if it is.", "sha1": "ghi789", "id": "3"}
{"seed": "public double calculateArea(double radius) {\n    return Math.PI * radius * radius;\n}", "comment": "// Calculates the area of a circle given its radius.", "sha1": "jkl012", "id": "4"}
{"seed": "public String concatenateStrings(String str1, String str2) {\n    return str1 + str2;\n}", "comment": "// Concatenates two strings and returns the result.", "sha1": "mno345", "id": "5"}
{"seed": "public int factorial(int n) {\n    if (n == 0) return 1;\n    return n * factorial(n - 1);\n}", "comment": "// Calculates the factorial of a given number recursively.", "sha1": "pqr678", "id": "6"}
{"seed": "public boolean isPalindrome(String str) {\n    String reversed = new StringBuilder(str).reverse().toString();\n    return str.equals(reversed);\n}", "comment": "// Checks if the given string is a palindrome.", "sha1": "stu901", "id": "7"}
{"seed": "public int findMax(int[] numbers) {\n    int max = numbers[0];\n    for (int num : numbers) {\n        if (num > max) max = num;\n    }\n    return max;\n}", "comment": "// Finds the maximum number in an array of integers.", "sha1": "vwx234", "id": "8"}
{"seed": "public void printFibonacci(int n) {\n    int a = 0, b = 1;\n    for (int i = 0; i < n; i++) {\n        System.out.print(a + \" \");\n        int next = a + b;\n        a = b;\n        b = next;\n    }\n}", "comment": "// Prints the first n Fibonacci numbers.", "sha1": "yz0123", "id": "9"}
{"seed": "public boolean isPrime(int number) {\n    if (number <= 1) return false;\n    for (int i = 2; i <= Math.sqrt(number); i++) {\n        if (number % i == 0) return false;\n    }\n    return true;\n}", "comment": "// Checks if the given number is prime and returns true if it is.", "sha1": "abc456", "id": "10"}
{"seed": "public int[] bubbleSort(int[] arr) {\n    int n = arr.length;\n    for (int i = 0; i < n - 1; i++) {\n        for (int j = 0; j < n - i - 1; j++) {\n            if (arr[j] > arr[j + 1]) {\n                int temp = arr[j];\n                arr[j] = arr[j + 1];\n                arr[j + 1] = temp;\n            }\n        }\n    }\n    return arr;\n}", "comment": "// Sorts an array of integers using the bubble sort algorithm.", "sha1": "def789", "id": "11"}
{"seed": "public String[] splitString(String str, String delimiter) {\n    return str.split(delimiter);\n}", "comment": "// Splits a string into an array using the specified delimiter.", "sha1": "ghi012", "id": "12"}
{"seed": "public int gcd(int a, int b) {\n    while (b != 0) {\n        int temp = b;\n        b = a % b;\n        a = temp;\n    }\n    return a;\n}", "comment": "// Calculates the greatest common divisor (GCD) of two integers.", "sha1": "jkl345", "id": "13"}
{"seed": "public boolean containsElement(int[] arr, int element) {\n    for (int num : arr) {\n        if (num == element) return true;\n    }\n    return false;\n}", "comment": "// Checks if an array contains a specific element.", "sha1": "mno678", "id": "14"}
{"seed": "public String toUpperCase(String str) {\n    return str.toUpperCase();\n}", "comment": "// Converts a string to uppercase.", "sha1": "pqr901", "id": "15"}
{"seed": "public double calculateAverage(int[] numbers) {\n    int sum = 0;\n    for (int num : numbers) {\n        sum += num;\n    }\n    return (double) sum / numbers.length;\n}", "comment": "// Calculates the average of an array of integers.", "sha1": "stu234", "id": "16"}
{"seed": "public void printMultiplicationTable(int number) {\n    for (int i = 1; i <= 10; i++) {\n        System.out.println(number + \" x \" + i + \" = \" + (number * i));\n    }\n}", "comment": "// Prints the multiplication table for a given number.", "sha1": "vwx567", "id": "17"}
{"seed": "public int[] mergeSortedArrays(int[] arr1, int[] arr2) {\n    int[] merged = new int[arr1.length + arr2.length];\n    int i = 0, j = 0, k = 0;\n    while (i < arr1.length && j < arr2.length) {\n        if (arr1[i] < arr2[j]) {\n            merged[k++] = arr1[i++];\n        } else {\n            merged[k++] = arr2[j++];\n        }\n    }\n    while (i < arr1.length) merged[k++] = arr1[i++];\n    while (j < arr2.length) merged[k++] = arr2[j++];\n    return merged;\n}", "comment": "// Merges two sorted arrays into one sorted array.", "sha1": "abc789", "id": "18"}
